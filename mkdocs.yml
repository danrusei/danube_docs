site_name: Danube Pub-Sub messaging documentation
nav:
        - Home: index.md
        - Getting Started:
                  - Run Danube on VMs or Bare Metal: getting_started/Danube_on_vms.md
                  - Run Danube on Kubernetes Cluster: getting_started/Danube_on_k8s_helm.md
        - Architecture:
                  - Danube architecture: architecture/architecture.md
                  - Danube entities: architecture/danube_entities.md
                  - Danube service components: architecture/internal_danube_services.md
                  - Queuing vs Pub-Sub (fan-out) messaging: architecture/Queuing_PubSub_messaging.md
                  - PubSub vs Streaming: architecture/PubSub_messaging_vs_Streaming.md
                  - Other Concepts: architecture/other_concepts.md
        - Client Libraries:
                  - Danube Clients: client_libraries/clients.md
                  - Setup: client_libraries/setup.md
                  - Create Producer: client_libraries/producer.md
                  - Create Consumer: client_libraries/consumer.md

        - Danube CLIs:
                  - Danube Admin:
                            - Brokers: danube_clis/danube_admin/brokers.md
                            - Namespaces: danube_clis/danube_admin/namespaces.md
                            - Topics: danube_clis/danube_admin/topics.md
                  - Danube PubSub:
                            - Producer: danube_clis/danube_pubsub/producer.rs
                            - Consumer: danube_clis/danube_pubsub/consumer.rs
        - Development:
                  - Development Environment: development/dev_environment.md
                  - Metadata Resources: development/internal_resources.md
theme:
        name: material
        features:
                - content.tabs.link
markdown_extensions:
        - pymdownx.highlight:
                  anchor_linenums: true
                  line_spans: __span
                  pygments_lang_class: true
        - pymdownx.inlinehilite
        - pymdownx.snippets
        - pymdownx.superfences
        - pymdownx.tabbed:
                  alternate_style: true
